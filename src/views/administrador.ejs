<!DOCTYPE html>
<html lang="en">
<head>
     <!-- Metadatos-->
    <meta charset="utf-8">
    <meta name="Author" content="Juan Nicolas Gonzalez Marin">
    <meta name="Descripcion" content="Portafolio Juan Nicolas Gonzalez">
    <meta name="Keywords" content="HTML,CSS,Javascript,React,Bootstrap">
    <meta name="viewport" content="width=device-width,initial-scale=1">
     <!-- Icono Pestaña -->
     <link rel="icon" type="image/x-icon" href="img/mathlogo.jpg">
    <!-- Bootstrap-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.4/font/bootstrap-icons.css">
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Fonts Google-->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Permanent+Marker&family=Quicksand:wght@300;500;700&display=swap" rel="stylesheet">
    <!-- APIS-->
    <!-- Lectura del CSS-->
    <link rel="stylesheet" href="/mainADM.css">
     <!-- Chart.js -->
     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.min.css">
  </head>
<body>
    <%- include('partials/navigationADM') %>
    <h1>Datos de la base de datos</h1>
    <table>
      <thead>
        <tr>
          <th>Name</th>
          <th>Apellido</th>
          <th>Email</th>
          <th>password</th>
          <!-- Agrega más encabezados de columnas según los campos de la tabla -->
        </tr>
      </thead>
      <tbody>
        <% datos.forEach(function(registro) { %>
          <tr>
            <td><%= registro.name %></td>
            <td><%= registro.apellido %></td>
            <td><%= registro.email %></td>
            <td><%= registro.password %></td>
            <!-- Agrega más celdas de datos según los campos de la tabla -->
          </tr>
        <% }); %>
      </tbody>
    </table>
    <p class="total-registros">Poblacion: <%= totalRegistros %></p>
    <p class="moda">Moda:  Gmail.com</p> 
    <p class="ContraseñaCombinatoria">Combinaciones de una contraseña: 62^255 </p> 
    <p class="ContraseñaCombinatoria">Mayusculas : 26^255 </p>
    <p class="ContraseñaCombinatoria">Minusculas : 26^255 </p>
    <p class="ContraseñaCombinatoria">Numerica: 10^255 </p>
</body>
<div class="graficaCorreos">
    <canvas id="grafica"></canvas>
  </div>
  
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const datos = <%- JSON.stringify(datos) %>;  //traigo todos los datos de la base de datos con un json
      const dominios = obtenerDominios(datos); //obtengo el dominio de cada dato 
      const conteos = obtenerConteos(dominios, datos);
        //Mostramos la cantidad de datos planos 
      const ctx = document.getElementById('grafica').getContext('2d');
      new Chart(ctx, {
        type: 'bar',
        data: {
          labels: dominios,
          datasets: [{
            label: 'Cantidad de correos electrónicos',
            data: conteos, //datos 
            backgroundColor: [
              'red', // Color para "@gmail.com"
              'blue', // Color para "@hotmail.com"
              'yelow', // Color para otros dominios
            ],
            borderColor: [
              'red',
              'blue',
              'yelow',
            ],
            borderWidth: 1 //ancho
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,  //que la tabla empieze en 0
              stepSize: 1
            }
          }
        }
      });
  
      function obtenerDominios(datos) {                 //Trae todos los dominios de los correos
        const dominios = datos.map(registro => {
          const dominio = registro.email.split('@')[1];
          return dominio ? dominio.toLowerCase() : 'Otros';
        });
        return [...new Set(dominios)];
      }
  
      function obtenerConteos(dominios, datos) {          //Compara el conteo de los dominios con los datos
        const conteos = dominios.map(dominio => {
          if (dominio === 'Otros') {
            return datos.length - conteos.reduce((a, b) => a + b, 0);
          }
          return datos.filter(registro => registro.email.includes(dominio)).length;
        });
        return conteos;
      }
     

    });

    

   
  </script>
</html>